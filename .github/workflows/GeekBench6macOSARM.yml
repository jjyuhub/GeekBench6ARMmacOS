name: Geekbench 6 Test on macOS ARM

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  run-geekbench:
    name: Run Geekbench 6 on macOS ARM
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Verify ARM architecture
        run: |
          echo "Checking if this is an ARM runner..."
          ARCH=$(uname -m)
          echo "Architecture: $ARCH"
          
          if [[ "$ARCH" == "arm64" ]]; then
            echo "✅ Confirmed: This is an ARM runner."
          else
            echo "❌ This is not an ARM runner. Found architecture: $ARCH"
            echo "The macos-latest runner might not be ARM-based. Try 'macos-14' for Apple Silicon."
            exit 1
          fi
          
          echo "CPU information:"
          sysctl -n machdep.cpu.brand_string
      
      - name: Download and install Geekbench 6 CLI
        run: |
          echo "Downloading Geekbench 6 Command Line Tool..."
          # Download the command line version instead of the GUI app
          curl -L https://cdn.geekbench.com/Geekbench-6.2.0-Mac.zip -o geekbench.zip
          unzip geekbench.zip
          
          # Look for command line tools in the package
          echo "Searching for command line tools in the package..."
          find . -name "geekbench*" -type f -perm +111
          
          # Check Resources directory for CLI tools
          echo "Checking Resources directory..."
          ls -la "Geekbench 6.app/Contents/Resources/" || echo "Resources directory not found"
          
      - name: Look for Geekbench CLI binary
        run: |
          echo "Looking for command line binaries..."
          # Search more extensively
          find "Geekbench 6.app" -type f -perm +111 | grep -v "\.framework"
          
          # Try to find files that might be CLI executables by name pattern
          echo "Files containing 'bench' in the name:"
          find "Geekbench 6.app" -name "*bench*" -type f
          
      - name: Try running various potential binaries
        run: |
          # Try different ways to run Geekbench
          
          echo "Attempt 1: Try running direct binary with run parameter"
          cd "Geekbench 6.app/Contents/MacOS/"
          ./Geekbench\ 6 run || echo "Failed with exit code $?"
          
          echo "Attempt 2: Try running with defaults write to enable CLI mode"
          defaults write com.primatelabs.geekbench6 RunInCommandLineMode -bool YES
          ./Geekbench\ 6 || echo "Failed with exit code $?"
          
          echo "Attempt 3: Check if there's a separate CLI binary in Resources"
          cd "../Resources"
          ls -la
          # Try to run any executable that might be there
          for file in $(find . -type f -perm +111); do
            echo "Trying to run $file"
            $file || echo "Failed with exit code $?"
          done
      
      - name: Display results location
        run: |
          echo "Geekbench results are stored in ~/Library/Application Support/Geekbench/Geekbench 6/"
          ls -la ~/Library/Application\ Support/Geekbench/Geekbench\ 6/ || echo "Results directory not found"
          
          # Find the most recent result file
          RESULT_FILE=$(find ~/Library/Application\ Support/Geekbench/Geekbench\ 6/ -name "*.gb6" -type f -exec ls -t {} \; | head -n 1)
          
          if [ -n "$RESULT_FILE" ]; then
            echo "Most recent result file: $RESULT_FILE"
            # Display some basic information from the result file
            cat "$RESULT_FILE" || echo "Cannot display result file contents"
          else
            echo "No result files found"
          fi
